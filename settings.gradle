plugins {
    id 'com.gradle.develocity' version '3.19.1'
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '2.1'
}

def isCI = System.getenv('CI') != null
def isLocal = !isCI
def isAuthenticated = System.getenv('DEVELOCITY_ACCESS_KEY') != null

develocity {
    server = 'https://ge.grails.org'
    buildScan {
        tag('grails')
        tag('gorm-mongodb')
        publishing.onlyIf { isAuthenticated }
        uploadInBackground = isLocal
    }
}

buildCache {
    local { enabled = isLocal }
    remote(develocity.buildCache) {
        push = isCI && isAuthenticated
        enabled = true
    }
}

// core
include "grails-datastore-gorm-bson"
include "grails-datastore-gorm-mongodb"
include "grails-datastore-gorm-mongodb-ext"

// documentation
include 'docs'

// plugins
include "boot-plugin"
project(':boot-plugin').name = 'gorm-mongodb-spring-boot'
include 'grails-plugin'

include 'json-templates'
project(':json-templates').name = 'views-json-templates'

// examples
include 'examples-grails3-mongodb'
project(":examples-grails3-mongodb").projectDir = new File(settingsDir, "examples/grails3-mongodb")

include 'examples-grails3-mongodb-database-per-tenant'
project(":examples-grails3-mongodb-database-per-tenant").projectDir = new File(settingsDir, "examples/grails3-mongodb-database-per-tenant")

include 'examples-grails3-hibernate5-mongodb'
project(":examples-grails3-hibernate5-mongodb").projectDir = new File(settingsDir, "examples/grails3-hibernate5-mongodb")

include 'examples-springboot-mongodb'
project(":examples-springboot-mongodb").projectDir = new File(settingsDir, "examples/springboot-mongodb")

include 'examples-test-data-service'
project(":examples-test-data-service").projectDir = new File(settingsDir, "examples/test-data-service")

include 'examples-gson-templates'
project(":examples-gson-templates").projectDir = new File(settingsDir, "examples/gson-templates")



