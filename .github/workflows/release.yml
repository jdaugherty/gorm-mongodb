name: Release
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GIT_USER_NAME: 'grails-build'
      GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: gradle/wrapper-validation-action@v2
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Set the current release version
        id: release_version
        run: echo ::set-output name=release_version::${GITHUB_REF:11}
      - name: Run pre-release
        uses: grails/github-actions/pre-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to Sonatyoe OSSRH
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
          GITHUB_MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $SECRING_FILE | base64 -d > secring.gpg
          echo "Publishing Artifacts"
          (set -x; ./gradlew -Psigning.secretKeyRingFile="${GITHUB_WORKSPACE}/secring.gpg" publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon)
      - name: Build Documentation
        if: success()
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
          GITHUB_MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Publishing Documentation"
          ./gradlew docs:docs
      - name: Export Gradle Properties
        uses: grails/github-actions/export-gradle-properties@main
      - name: Determine docs target repository
        if: success()
        uses: haya14busa/action-cond@v1
        id: docs_target
        with:
          cond: ${{ github.repository == 'grails/gorm-mongodb' }}
          if_true: "grails/grails-data-mapping"
          if_false: ${{ github.repository }}
      - name: Publish to Github Pages
        if: success()
        uses: grails/github-pages-deploy-action@main
        env:
          BETA: ${{ contains(steps.release_version.outputs.release_version, 'M') || contains(steps.release_version.outputs.release_version, 'RC') }}
          TARGET_REPOSITORY: ${{ steps.docs_target.outputs.value }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/build/docs
          DOC_SUB_FOLDER: mongodb
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          VERSION: ${{ steps.release_version.outputs.release_version }}
      - name: Run post-release
        if: success()
        uses: grails/github-actions/post-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SNAPSHOT_SUFFIX: -SNAPSHOT
