name: "Release"
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: read
    env:
      GIT_USER_NAME: grails-build
      GIT_USER_EMAIL: grails-build@users.noreply.github.com
    steps:
      - name: "üì• Checkout repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup JDK"
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: liberica
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
      - name: "üìù Store the current release version"
        id: release_version
        run: echo "value=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: "‚öôÔ∏è Run pre-release"
        uses: grails/github-actions/pre-release@v3
      - name: "üîê Generate key file for artifact signing"
        env:
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: echo $SECRING_FILE | base64 -d > ${{ github.workspace }}/secring.gpg
      - name: "üì§ Publish to Sonatype - close and release staging repository"
        env:
          GITHUB_MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GRAILS_PUBLISH_RELEASE: 'true'
          NEXUS_PUBLISH_USERNAME: ${{ secrets.NEXUS_PUBLISH_USERNAME }}
          NEXUS_PUBLISH_PASSWORD: ${{ secrets.NEXUS_PUBLISH_PASSWORD }}
          NEXUS_PUBLISH_URL: ${{ secrets.NEXUS_PUBLISH_RELEASE_URL }}
          NEXUS_PUBLISH_STAGING_PROFILE_ID: ${{ secrets.NEXUS_PUBLISH_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
        run: >
          ./gradlew
          -Psigning.secretKeyRingFile="${GITHUB_WORKSPACE}/secring.gpg"
          publishToSonatype
          closeAndReleaseSonatypeStagingRepository
      - name: "üî® Build Documentation"
        if: success()
        env:
          GITHUB_MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew docs:docs
      - name: "üõ´ Export Gradle Properties"
        uses: grails/github-actions/export-gradle-properties@v3
      - name: "üîç Determine docs target repository"
        if: success()
        uses: haya14busa/action-cond@94f77f7a80cd666cb3155084e428254fea4281fd # v1.2.1 (Use commit sha as this is a 3rd party action)
        id: docs_target
        with:
          cond: ${{ github.repository == 'grails/gorm-mongodb' }}
          if_true: grails/grails-data-mapping
          if_false: ${{ github.repository }}
      - name: "üì§ Publish to Github Pages"
        if: success()
        uses: grails/github-pages-deploy-action@v3
        env:
          BETA: ${{ contains(steps.release_version.outputs.release_version, 'M') || contains(steps.release_version.outputs.release_version, 'RC') }}
          BRANCH: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          DOC_FOLDER: gh-pages
          DOC_SUB_FOLDER: mongodb
          FOLDER: docs/build/docs
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TARGET_REPOSITORY: ${{ steps.docs_target.outputs.value }}
          VERSION: ${{ steps.release_version.outputs.release_version }}
      - name: "‚öôÔ∏è Run post-release"
        if: success()
        uses: grails/github-actions/post-release@v3